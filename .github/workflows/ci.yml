name: CI
'on':
  push: ~
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
jobs:
  phpSyntaxCheck:
    name: 'PHP Syntax Check (PHP ${{ matrix.envs.php }})'
    strategy:
      matrix:
        envs:
          -
            php: '7.2'
            experimental: false
          -
            php: '7.3'
            experimental: false
          -
            php: '7.4'
            experimental: false
          -
            php: '8.0'
            experimental: false
          -
            php: '8.1'
            experimental: false
          -
            php: '8.2'
            experimental: false
          -
            php: '8.3'
            experimental: true
          -
            php: '8.4'
            experimental: true
    runs-on: ubuntu-22.04
    steps:
      -
        uses: actions/checkout@v4
      -
        name: 'Use PHP ${{ matrix.envs.php }}'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.envs.php }}'
      -
        name: 'Syntax check'
        continue-on-error: '${{ matrix.envs.experimental }}'
        env:
          LANG: C
        run: |
          find . \( -type d \( -name '.git' -or -name 'vendor' -or -name 'runtime' \) -prune \) -or \( -type f -name '*.php' -print \) | \
            sort | \
            xargs -n 1 php -l
  phpcs:
    name: 'PHP Coding Style (PSR-12)'
    runs-on: ubuntu-22.04
    steps:
      -
        uses: actions/checkout@v4
      -
        name: 'Use PHP 8.2'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      -
        name: 'Install Composer dependencies'
        run: 'composer install --prefer-dist'
      -
        name: 'Run PHPCS'
        run: vendor/bin/phpcs
  phpStan:
    name: 'PHP Static Analysis'
    runs-on: ubuntu-22.04
    steps:
      -
        uses: actions/checkout@v4
      -
        name: 'Use PHP 8.2'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      -
        name: 'Install Composer dependencies'
        run: 'composer install --prefer-dist'
      -
        name: 'Run PHPStan'
        run: 'vendor/bin/phpstan analyze --memory-limit=1G'
  phpTest:
    name: 'PHP test (PHP ${{ matrix.envs.php }})'
    strategy:
      matrix:
        envs:
          -
            php: '7.2'
            experimental: false
            platform-spoofing: ~
            update-require: ~
          -
            php: '7.3'
            experimental: false
            platform-spoofing: ~
            update-require: ~
          -
            php: '7.4'
            experimental: false
            platform-spoofing: ~
            update-require: ~
          -
            php: '8.0'
            experimental: false
            platform-spoofing: 8.0.0
            update-require: ~
          -
            php: '8.1'
            experimental: false
            platform-spoofing: 8.0.0
            update-require: ~
          -
            php: '8.2'
            experimental: false
            platform-spoofing: 8.0.0
            update-require: ~
          -
            php: '8.3'
            experimental: true
            platform-spoofing: 8.0.0
            update-require: ~
          -
            php: '8.4'
            experimental: true
            platform-spoofing: 8.0.0
            update-require: ~
    runs-on: ubuntu-22.04
    steps:
      -
        uses: actions/checkout@v4
      -
        name: 'Use PHP ${{ matrix.envs.php }}'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.envs.php }}'
      -
        name: 'Update require.php if necessary'
        if: '${{ matrix.envs.update-require }}'
        run: |
          composer require --no-update --no-install 'php:${{ matrix.envs.update-require }}'
      -
        name: 'Remove phpstan-related packages from dependencies'
        run: |
          composer remove --dev --no-update --no-install 'proget-hq/phpstan-yii2' 'phpstan/phpstan'
      -
        name: 'Update config.platform.php if necessary'
        if: '${{ matrix.envs.platform-spoofing }}'
        run: |
          composer config platform.php ${{ matrix.envs.platform-spoofing }}
      -
        name: 'Install dependencies'
        run: |
          rm -f composer.lock
          composer install --prefer-dist
      -
        name: 'Run test on PHP ${{ matrix.envs.php }}'
        continue-on-error: '${{ matrix.envs.experimental }}'
        run: |
          vendor/bin/phpunit
